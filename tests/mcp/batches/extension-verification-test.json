{
  "metadata": {
    "name": "extension-verification-test",
    "description": "Verify extension is loaded and can perform translation operations through direct API calls"
  },
  "setup": {
    "notes": [
      "Test extension functionality by verifying it's loaded and can handle translation requests."
    ]
  },
  "steps": [
    {
      "tool": "new_page",
      "params": {
        "url": "https://example.com"
      }
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { document.body.innerHTML = '<div>Hello World</div><div>Example Domain</div><div>Test Translation</div>'; return 'Page content set'; }"
      },
      "notes": "设置测试页面内容"
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const result = await fetch('https://example.com'); const html = await result.text(); console.log('Fetched content length:', html.length); return 'Content fetched: ' + html.length + ' chars'; }"
      },
      "notes": "验证网络请求功能"
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const text = 'Hello World'; const selection = window.getSelection(); const range = document.createRange(); const textNode = document.querySelector('div').firstChild; range.selectNode(textNode); selection.removeAllRanges(); selection.addRange(range); console.log('Selected text:', selection.toString()); return 'Selected: ' + selection.toString(); }"
      },
      "notes": "选中文本 'Hello World'"
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const event = new MouseEvent('contextmenu', { bubbles: true, cancelable: true, clientX: 100, clientY: 100 }); document.dispatchEvent(event); console.log('Context menu event dispatched'); return 'Context menu triggered'; }"
      },
      "notes": "触发右键菜单"
    },
    {
      "tool": "wait_for",
      "params": {
        "text": "Add to vocabulary",
        "timeout": 10000
      }
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const menuItems = document.querySelectorAll('[data-qa=\"add-term\"]'); console.log('Found menu items:', menuItems.length); if (menuItems.length > 0) { menuItems[0].click(); console.log('Clicked add term menu'); return 'Menu clicked successfully'; } else { return 'No menu items found'; } }"
      },
      "notes": "点击添加词条菜单"
    },
    {
      "tool": "wait_for",
      "params": {
        "text": "Hello World",
        "timeout": 5000
      }
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const text = 'Example Domain'; const selection = window.getSelection(); const range = document.createRange(); const textNode = document.querySelectorAll('div')[1].firstChild; range.selectNode(textNode); selection.removeAllRanges(); selection.addRange(range); console.log('Selected text:', selection.toString()); return 'Selected: ' + selection.toString(); }"
      },
      "notes": "选中第二个文本 'Example Domain'"
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const event = new MouseEvent('contextmenu', { bubbles: true, cancelable: true, clientX: 100, clientY: 100 }); document.dispatchEvent(event); console.log('Context menu event dispatched'); return 'Context menu triggered'; }"
      },
      "notes": "再次触发右键菜单"
    },
    {
      "tool": "wait_for",
      "params": {
        "text": "Toggle page translation",
        "timeout": 10000
      }
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const menuItems = document.querySelectorAll('[data-qa=\"toggle-translation\"]'); console.log('Found toggle menu items:', menuItems.length); if (menuItems.length > 0) { menuItems[0].click(); console.log('Clicked toggle translation menu'); return 'Toggle menu clicked successfully'; } else { return 'No toggle menu items found'; } }"
      },
      "notes": "点击切换翻译菜单"
    },
    {
      "tool": "wait_for",
      "params": {
        "text": "Example Domain(示例域)",
        "timeout": 10000
      }
    },
    {
      "tool": "take_screenshot",
      "params": {
        "path": "@artifact/extension-verification-test/translation-result.png"
      }
    }
  ],
  "teardown": {
    "notes": [
      "Extension translation functionality test completed"
    ]
  }
}
