{
  "metadata": {
    "name": "mini-translate-translation-scenarios",
    "description": "Test 3 real translation scenarios: add term, toggle translation, remove term"
  },
  "setup": {
    "notes": [
      "Load dist/ extension and capture its ID automatically.",
      "Navigate to a content page with sample text for translation testing."
    ]
  },
  "steps": [
    {
      "tool": "new_page",
      "params": {
        "url": "https://example.com"
      }
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const result = await fetch('https://example.com'); const html = await result.text(); document.body.innerHTML = html; }"
      },
      "notes": "加载示例页面内容"
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const text = 'Example Domain'; const selection = window.getSelection(); const range = document.createRange(); const textNode = document.createTextNode(text); document.body.appendChild(textNode); range.selectNode(textNode); selection.removeAllRanges(); selection.addRange(range); }"
      },
      "notes": "模拟选中文本 'Example Domain'"
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const event = new MouseEvent('contextmenu', { bubbles: true, cancelable: true, clientX: 100, clientY: 100 }); document.dispatchEvent(event); await new Promise(r => setTimeout(r, 500)); }"
      },
      "notes": "触发右键菜单"
    },
    {
      "tool": "wait_for",
      "params": {
        "text": "Add to vocabulary"
      },
      "timeout": 5000
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const menuItems = document.querySelectorAll('[data-qa=\"add-term\"]'); if (menuItems.length > 0) { menuItems[0].click(); } else { throw new Error('Add term menu not found'); } await new Promise(r => setTimeout(r, 1000)); }"
      },
      "notes": "点击添加词条菜单项"
    },
    {
      "tool": "wait_for",
      "params": {
        "text": "Example Domain"
      },
      "timeout": 3000
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const text = 'Example Domain'; const selection = window.getSelection(); const range = document.createRange(); const textNode = document.createTextNode(text); document.body.appendChild(textNode); range.selectNode(textNode); selection.removeAllRanges(); selection.addRange(range); const event = new MouseEvent('contextmenu', { bubbles: true, cancelable: true, clientX: 100, clientY: 100 }); document.dispatchEvent(event); await new Promise(r => setTimeout(r, 500)); }"
      },
      "notes": "再次选中文本并触发右键菜单"
    },
    {
      "tool": "wait_for",
      "params": {
        "text": "Toggle page translation"
      },
      "timeout": 5000
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const menuItems = document.querySelectorAll('[data-qa=\"toggle-translation\"]'); if (menuItems.length > 0) { menuItems[0].click(); } else { throw new Error('Toggle translation menu not found'); } await new Promise(r => setTimeout(r, 1000)); }"
      },
      "notes": "点击切换翻译菜单项"
    },
    {
      "tool": "wait_for",
      "params": {
        "text": "Example Domain(示例域)"
      },
      "timeout": 5000
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const text = 'Example Domain'; const selection = window.getSelection(); const range = document.createRange(); const textNode = document.createTextNode(text); document.body.appendChild(textNode); range.selectNode(textNode); selection.removeAllRanges(); selection.addRange(range); const event = new MouseEvent('contextmenu', { bubbles: true, cancelable: true, clientX: 100, clientY: 100 }); document.dispatchEvent(event); await new Promise(r => setTimeout(r, 500)); }"
      },
      "notes": "第三次选中文本并触发右键菜单"
    },
    {
      "tool": "wait_for",
      "params": {
        "text": "Remove from vocabulary"
      },
      "timeout": 5000
    },
    {
      "tool": "evaluate_script",
      "params": {
        "function": "async () => { const menuItems = document.querySelectorAll('[data-qa=\"remove-term\"]'); if (menuItems.length > 0) { menuItems[0].click(); } else { throw new Error('Remove term menu not found'); } await new Promise(r => setTimeout(r, 1000)); }"
      },
      "notes": "点击移除词条菜单项"
    },
    {
      "tool": "wait_for",
      "params": {
        "text": "Example Domain"
      },
      "timeout": 3000
    },
    {
      "tool": "take_screenshot",
      "params": {
        "path": "@artifact/translation-scenarios/final-state.png"
      }
    }
  ],
  "teardown": {
    "notes": [
      "Clear any remaining selections and restore page state."
    ]
  }
}
